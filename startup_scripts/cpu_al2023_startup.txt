Content-Type: multipart/mixed; boundary="//"
MIME-Version: 1.0

--//
Content-Type: text/cloud-config; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="cloud-config.txt"

#cloud-config
cloud_final_modules:
- [scripts-user, always]

--//
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="userdata.txt"

#!/bin/bash
cd /home/ec2-user

# Update and install Docker and other dependencies as root
sudo yum update -y
sudo yum install docker git -y
sudo systemctl start docker
sudo systemctl enable docker

# Switch to ec2-user and run the following commands
sudo -u ec2-user -i bash << 'EOF'
# Download and install uv
curl -LsSf https://astral.sh/uv/install.sh | sh
# create and activate fmbench venv
uv venv $HOME/.fmbench_python312 --python 3.12
source $HOME/.fmbench_python312/bin/activate

# Set the flag for latest version
fmbench_latest="__fmbench_latest__"  # You can set this to "False" to use pip install
fmbench_branch="__fmbench_branch__"  # specify the branch name here

# Conditional installation based on fmbench_latest flag
if [ "$fmbench_latest" = "True" ]; then
    if [ -n "$fmbench_repo" ] && [ "$fmbench_repo" != "None" ]; then
        # Clone the repository
        git clone $fmbench_repo
        
        # Dynamically get the repository directory name from the URL.
        # This strips a trailing .git if present.
        repo_dir=$(basename "$fmbench_repo" .git)
        
        # Change into the repository directory
        if [ -d "$repo_dir" ]; then
            cd "$repo_dir" || { echo "Error: Cannot change directory to $repo_dir"; exit 1; }
        else
            echo "Error: The directory '$repo_dir' was not found."
            exit 1
        fi
        
        # Checkout specific branch if provided
        if [ -n "$fmbench_branch" ] && [ "$fmbench_branch" != "None" ]; then
            git checkout $fmbench_branch
        fi
        
        # Build fmbench and install
        uv build
        uv pip install -U dist/*.whl
    else
        echo "Error: fmbench_repo is not specified or is None"
        exit 1
    fi
else
    # Install fmbench directly from pip
    uv pip install -U fmbench
fi

# Add ec2-user to the docker group and reload group memberships
sudo usermod -a -G docker $USER
newgrp docker

# Clone the vLLM project repository from GitHub
git clone https://github.com/vllm-project/vllm.git

# Change the directory to the cloned vLLM project
cd vllm

# Build a Docker image using the provided Dockerfile for CPU, with a shared memory size of 4GB
sudo docker build -f Dockerfile.cpu -t vllm-cpu-env --shm-size=4g .

DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
mkdir -p $DOCKER_CONFIG/cli-plugins
sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o $DOCKER_CONFIG/cli-plugins/docker-compose
sudo chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
docker compose version

# Download content from S3 using the provided script
curl -s https://raw.githubusercontent.com/aws-samples/foundation-model-benchmarking-tool/main/copy_s3_content.sh | sh -s -- /tmp
echo "__HF_TOKEN__" > /tmp/fmbench-read/scripts/hf_token.txt


# Add the fmbench environment activation and directory navigation to .bashrc
source $HOME/.fmbench_python312/bin/activate
echo 'source $HOME/.fmbench_python312/bin/activate' >> $HOME/.bashrc


source $HOME/.bashrc
touch /tmp/startup_complete.flag
EOF
