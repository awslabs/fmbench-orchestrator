#!/bin/bash
cd /home/ubuntu/

# Update package lists and install Docker and Git
sudo apt update
sudo apt install -y docker.io git

# Start the Docker service
sudo systemctl start docker

# Run the following commands as the ubuntu user
sudo -u ubuntu -i bash << 'EOF'
# Download and install uv
curl -LsSf https://astral.sh/uv/install.sh | sh
# create and activate fmbench venv
uv venv $HOME/.fmbench_python312 --python 3.12
source $HOME/.fmbench_python312/bin/activate

# Set the flag for latest version
fmbench_latest="__fmbench_latest__"  # You can set this to "False" to use pip install
fmbench_branch="__fmbench_branch__"  # specify the branch name here

# Conditional installation based on fmbench_latest flag
if [ "$fmbench_latest" = "True" ]; then
    if [ -n "$fmbench_repo" ] && [ "$fmbench_repo" != "None" ]; then
        # Clone the repository
        git clone $fmbench_repo
        
        # Dynamically get the repository directory name from the URL.
        # This strips a trailing .git if present.
        repo_dir=$(basename "$fmbench_repo" .git)
        
        # Change into the repository directory
        if [ -d "$repo_dir" ]; then
            cd "$repo_dir" || { echo "Error: Cannot change directory to $repo_dir"; exit 1; }
        else
            echo "Error: The directory '$repo_dir' was not found."
            exit 1
        fi
        
        # Checkout specific branch if provided
        if [ -n "$fmbench_branch" ] && [ "$fmbench_branch" != "None" ]; then
            git checkout $fmbench_branch
        fi
        
        # Build fmbench and install
        uv build
        uv pip install -U dist/*.whl
    else
        echo "Error: fmbench_repo is not specified or is None"
        exit 1
    fi
else
    # Install fmbench directly from pip
    uv pip install -U fmbench
fi
sudo usermod -a -G docker $USER
newgrp docker

# curl the docker file for triton
curl -o ./Dockerfile_triton https://raw.githubusercontent.com/aws-samples/foundation-model-benchmarking-tool/main/src/fmbench/scripts/triton/Dockerfile_triton

# curl the script that builds and pushes the triton image locally
curl -o build_and_push_triton.sh https://raw.githubusercontent.com/aws-samples/foundation-model-benchmarking-tool/main/src/fmbench/scripts/triton/build_and_push_triton.sh

# Make the triton build and push script executable, and run it
chmod +x build_and_push_triton.sh
./build_and_push_triton.sh

# Download content from S3 using the provided script
curl -s https://raw.githubusercontent.com/aws-samples/foundation-model-benchmarking-tool/main/copy_s3_content.sh | sh -s -- /tmp
echo "__HF_TOKEN__" > /tmp/fmbench-read/scripts/hf_token.txt

# Add the conda environment activation to .bashrc
echo 'source $HOME/.fmbench_python312/bin/activate' >> $HOME/.bashrc

source ~/.bashrc
touch /tmp/startup_complete.flag
EOF
